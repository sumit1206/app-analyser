var BlankonDemo = function () {

    // =========================================================================
    // SETTINGS APP
    // =========================================================================
    var adminCssPath = BlankonApp.handleBaseURL()+'/assets/admin/css';

    return {

        // =========================================================================
        // CONSTRUCTOR APP
        // =========================================================================
        init: function () {
            BlankonDemo.handleChooseThemes();
            BlankonDemo.handleNavbarColor();
            BlankonDemo.handleSidebarColor();
            BlankonDemo.handleLayoutSetting();
        },
        
        // =========================================================================
        // CHOOSE THEMES
        // =========================================================================
        handleChooseThemes: function () {
            // Check cookie for color schemes
            if ($.cookie('color_schemes')) {
                $('link#theme').attr('href', adminCssPath+'/themes/'+$.cookie('color_schemes')+'.theme.css');
            }
            // Check cookie for navbar color
            if ($.cookie('navbar_color')) {
                $('.navbar-toolbar').attr('class', 'navbar navbar-toolbar navbar-'+$.cookie('navbar_color'));
            }
            // Check cookie for sidebar color
            if ($.cookie('sidebar_color')) {
                // Check variant sidebar class
                if($('#sidebar-left').hasClass('sidebar-box')){
                    $('#sidebar-left').attr('class','sidebar-box sidebar-'+$.cookie('sidebar_color'));
                }
                else if($('#sidebar-left').hasClass('sidebar-rounded')){
                    $('#sidebar-left').attr('class','sidebar-rounded sidebar-'+$.cookie('sidebar_color'));
                }
                else if($('#sidebar-left').hasClass('sidebar-circle')){
                    $('#sidebar-left').attr('class','sidebar-circle sidebar-'+$.cookie('sidebar_color'));
                }
                else if($('#sidebar-left').attr('class') == ''){
                    $('#sidebar-left').attr('class','sidebar-'+$.cookie('sidebar_color'));
                }
            }

            $('.color-schemes .theme').on('click',function(){

                // Create variable name selector file css
                var themename = $(this).find('.hide').text();

                // Add effect sound
                if($('.page-sound').length){
                    ion.sound.play("camera_flashing_2");
                }

                // Add attribut href css theme
                $('link#theme').attr('href', adminCssPath+'/themes/'+themename+'.theme.css');

                // Set cookie theme name value to variable themename
                $.cookie('color_schemes',themename, {expires: 1});

            });
        },

        // =========================================================================
        // NAVBAR COLOR
        // =========================================================================
        handleNavbarColor: function () {
            $('.navbar-color .theme').on('click',function(){
                // Create variable name selector file css
                var classname = $(this).find('.hide').text();
                // Add effect sound
                if($('.page-sound').length){
                    ion.sound.play("camera_flashing_2");
                }
                // Add class navbar-color
                $('.navbar-toolbar').attr('class', 'navbar navbar-toolbar navbar-'+classname);
                // Set cookie theme name value to variable classname
                $.cookie('navbar_color',classname, {expires: 1});
            });
        },

        // =========================================================================
        // SIDEBAR COLOR
        // =========================================================================
        handleSidebarColor: function () {
            $('.sidebar-color .theme').on('click',function(){
                // Create variable name selector file css
                var classname = $(this).find('.hide').text();
                // Add effect sound
                if($('.page-sound').length){
                    ion.sound.play("camera_flashing_2");
                }
                // Check variant sidebar class
                if($('#sidebar-left').hasClass('sidebar-box')){
                    $('#sidebar-left').attr('class','sidebar-box sidebar-'+classname);
                }
                else if($('#sidebar-left').hasClass('sidebar-rounded')){
                    $('#sidebar-left').attr('class','sidebar-rounded sidebar-'+classname);
                }
                else if($('#sidebar-left').hasClass('sidebar-circle')){
                    $('#sidebar-left').attr('class','sidebar-circle sidebar-'+classname);
                }
                else if($('#sidebar-left').attr('class') == ''){
                    $('#sidebar-left').attr('class','sidebar-'+classname);
                }
                // Set cookie theme name value to variable classname
                $.cookie('sidebar_color',classname, {expires: 1});
            });
        },

        // =========================================================================
        // LAYOUT SETTING
        // =========================================================================
        handleLayoutSetting: function () {
            // Check cookie for layout setting
            if ($.cookie('layout_setting')) {
                $('body').addClass($.cookie('layout_setting'));
            }

            // Check cookie for header layout setting
            if ($.cookie('header_layout_setting')) {
                $('body').addClass($.cookie('header_layout_setting'));
            }

            // Check cookie for sidebar layout setting
            if ($.cookie('sidebar_layout_setting')) {
                $('#sidebar-left').addClass($.cookie('sidebar_layout_setting'));
            }

            // Check cookie for sidebar type layout setting
            if ($.cookie('sidebar_type_setting')) {
                $('#sidebar-left').addClass($.cookie('sidebar_type_setting'));
            }

            // Check cookie for footer layout setting
            if ($.cookie('footer_layout_setting')) {
                $('body').addClass($.cookie('footer_layout_setting'));
            }

            // Check checked status input on layout setting
            if($('body').not('.page-boxed')){
                $('.layout-setting li:eq(0) input').attr('checked','checked');
            }
            if($('body').hasClass('page-boxed')){
                $('.layout-setting li:eq(1) input').attr('checked','checked');
                $('body').removeClass('page-header-fixed');
                $('body').removeClass('page-sidebar-fixed');
                $('body').removeClass('page-footer-fixed');
                $('.header-layout-setting li:eq(1) input').attr('disabled','disabled').next().css('text-decoration','line-through').parent('.rdio').attr({'data-toggle':'tooltip','data-container':'body','data-placement':'left','data-title':'Not working on page boxed'}).tooltip();
                $('.sidebar-layout-setting li:eq(1) input').attr('disabled','disabled').next().css('text-decoration','line-through').parent('.rdio').attr({'data-toggle':'tooltip','data-container':'body','data-placement':'left','data-title':'Not working on page boxed'}).tooltip();
                $('.footer-layout-setting li:eq(1) input').attr('disabled','disabled').next().css('text-decoration','line-through').parent('.rdio').attr({'data-toggle':'tooltip','data-container':'body','data-placement':'left','data-title':'Not working on page boxed'}).tooltip();
            }

            // Check checked status input on header layout setting
            if($('body').not('.page-header-fixed')){
                $('.header-layout-setting li:eq(0) input').attr('checked','checked');
            }
            if($('body').hasClass('page-header-fixed')){
                $('.header-layout-setting li:eq(1) input').attr('checked','checked');
            }

            // Check checked status input on sidebar layout setting
            if($('body').not('.page-sidebar-fixed')){
                $('.sidebar-layout-setting li:eq(0) input').attr('checked','checked');
            }
            if($('body').hasClass('page-sidebar-fixed')){
                $('.sidebar-layout-setting li:eq(1) input').attr('checked','checked');
            }

            // Check checked status input on sidebar type layout setting
            if($('#sidebar-left').not('.sidebar-box, .sidebar-rounded, .sidebar-circle')){
                $('.sidebar-type-setting li:eq(0) input').attr('checked','checked');
            }
            if($('#sidebar-left').hasClass('sidebar-box')){
                $('.sidebar-type-setting li:eq(1) input').attr('checked','checked');
            }
            if($('#sidebar-left').hasClass('sidebar-rounded')){
                $('.sidebar-type-setting li:eq(2) input').attr('checked','checked');
            }
            if($('#sidebar-left').hasClass('sidebar-circle')){
                $('.sidebar-type-setting li:eq(3) input').attr('checked','checked');
            }

            // Check checked status input on footer layout setting
            if($('body').not('.page-footer-fixed')){
                $('.footer-layout-setting li:eq(0) input').attr('checked','checked');
            }
            if($('body').hasClass('page-footer-fixed')){
                $('.footer-layout-setting li:eq(1) input').attr('checked','checked');
            }


            $('.layout-setting input').change(function(){

                // Create variable class name for layout setting
                var classname = $(this).val();

                // Add trigger change class on body HTML
                if($('body').hasClass('page-boxed')){
                    $('body').removeClass('page-boxed');
                    $('body').removeClass('page-header-fixed');
                    $('body').removeClass('page-sidebar-fixed');
                    $('body').removeClass('page-footer-fixed');
                    $('.header-layout-setting li:eq(1) input').removeAttr('disabled').next().css('text-decoration','inherit').parent('.rdio').tooltip('destroy');
                    $('.sidebar-layout-setting li:eq(1) input').removeAttr('disabled').next().css('text-decoration','inherit').parent('.rdio').tooltip('destroy');
                    $('.footer-layout-setting li:eq(1) input').removeAttr('disabled').next().css('text-decoration','inherit').parent('.rdio').tooltip('destroy');
                }else{
                    $('body').addClass($(this).val());
                    $('body').removeClass('page-header-fixed');
                    $('body').removeClass('page-sidebar-fixed');
                    $('body').removeClass('page-footer-fixed');
                    $('.header-layout-setting li:eq(1) input').attr('disabled','disabled').next().css('text-decoration','line-through').parent('.rdio').attr({'data-toggle':'tooltip','data-container':'body','data-placement':'left','data-title':'Not working on page boxed'}).tooltip();
                    $('.sidebar-layout-setting li:eq(1) input').attr('disabled','disabled').next().css('text-decoration','line-through').parent('.rdio').attr({'data-toggle':'tooltip','data-container':'body','data-placement':'left','data-title':'Not working on page boxed'}).tooltip();
                    $('.footer-layout-setting li:eq(1) input').attr('disabled','disabled').next().css('text-decoration','line-through').parent('.rdio').attr({'data-toggle':'tooltip','data-container':'body','data-placement':'left','data-title':'Not working on page boxed'}).tooltip();
                }

                // Set cookie theme name value to variable classname
                $.cookie('layout_setting',classname, {expires: 1});

            });

            $('.header-layout-setting input').change(function(){

                // Create variable class name for layout setting
                var classname = $(this).val();

                // Add trigger change class on body HTML
                if($('body').hasClass('page-header-fixed')){
                    $('body').removeClass('page-header-fixed');
                    $('body').addClass($(this).val());
                }

                $('body').addClass($(this).val());

                // Set cookie theme name value to variable classname
                $.cookie('header_setting',classname, {expires: 1});

            });

            $('.sidebar-layout-setting input').change(function(){

                // Create variable class name for layout setting
                var classname = $(this).val();

                // Add trigger change class on body HTML
                if($('body').hasClass('page-sidebar-fixed')){
                    $('body').removeClass('page-sidebar-fixed');
                    $('.header-layout-setting li:eq(0) input').removeAttr('disabled').next().css('text-decoration','inherit').parent('.rdio').tooltip('destroy');
                }else{
                    $('body').addClass($(this).val());
                    $('body').addClass('page-header-fixed');
                    $('.header-layout-setting li:eq(0) input').attr('disabled','disabled').next().css('text-decoration','line-through').parent('.rdio').attr({'data-toggle':'tooltip','data-container':'body','data-placement':'left','data-title':'Not working on sidebar fixed'}).tooltip();
                    $('.header-layout-setting li:eq(1) input').attr('checked','checked');
                }

                // Set cookie theme name value to variable classname
                $.cookie('sidebar_layout_setting',classname, {expires: 1});

            });

            $('.sidebar-type-setting input').change(function(){

                // Create variable class name for layout setting
                var classname = $(this).val();

                // Add trigger change class on sidebar left element
                if($('#sidebar-left').hasClass('sidebar-circle')){
                    $('#sidebar-left').removeClass('sidebar-circle');
                    $('#sidebar-left').addClass($(this).val());
                }

                if($('#sidebar-left').hasClass('sidebar-box')){
                    $('#sidebar-left').removeClass('sidebar-box');
                    $('#sidebar-left').addClass($(this).val());
                }

                if($('#sidebar-left').hasClass('sidebar-rounded')){
                    $('#sidebar-left').removeClass('sidebar-rounded');
                    $('#sidebar-left').addClass($(this).val());
                }

                $('#sidebar-left').addClass($(this).val());

                // Set cookie theme name value to variable classname
                $.cookie('sidebar_type_setting',classname, {expires: 1});

            });

            $('.footer-layout-setting input').change(function(){

                // Create variable class name for layout setting
                var classname = $(this).val();

                // Add trigger change class on body HTML
                if($('body').hasClass('page-footer-fixed')){
                    $('body').removeClass('page-footer-fixed')
                }else{
                    $('body').addClass($(this).val());
                }

                // Set cookie theme name value to variable classname
                $.cookie('footer_layout_setting',classname, {expires: 1});

            });
        }
        
    };

}();

function loadDatePicker(setting) {
        
    if(setting == 'hour') {
        $('#dayyearmonth').show();
        $('#yearmonth').hide();   
    }
    else if(setting == 'day') {
        $('#yearmonth').show();
        $('#dayyearmonth').hide();
    }
}

$(document).ready(function(){
    var current_page = window.location.pathname.split('/').pop();
    
    $( ".sidebar-menu a" ).each(function() {
        if($(this).attr("href") == 'index.php' && current_page == '') {
            $( this ).addClass( "active" );
        }
        if($(this).attr("href") == current_page) {
            $( this ).parent().addClass( "active" );
        }
    });
    
    $('#trend_drop_down').change(function() {
        var type = $(this).val();
        if(type){
            loadDatePicker(type);
        }
    });

    $('#yearmonth').datepicker({
        format: 'yyyy-mm',
        viewMode: "months",
        minViewMode: "months",
        changeMonth: true,
        changeYear: true,
        showButtonPanel: true,
        todayHighlight: true,
        autoclose: true,
        orientation: 'bottom'
    });
    $('#dayyearmonth').datepicker({
        format: 'yyyy-mm-dd',
        todayHighlight: true,
        autoclose: true
    });
    
    $("input:checkbox[name='rf_list']").click(function() {
        $(this).not(this).prop('checked', false);
    });
    
    $("input:checkbox[name='rf_list']").on('click', function () {
        if ($(this).is(":checked")) {
            $("input:checkbox[name='rf_list']").prop("checked", false);
            $(this).prop("checked", true);
        } else {
            $(this).prop("checked", false);
        }
        toggleMarkersGroup();
    });
    
    $("input:checkbox[name='mute_call']").on('click', function () {
        toggleMarkersGroup();
    });
    
    $.ajax({
        type:'POST',
        url:'ajax/save_frm_data.php',
        data: {type: 'get_city_details'},
        dataType:'json',
        beforeSend :function() {
//            jQuery('#txt_city').find("option:eq(0)").html("Please wait..");
        },
        success:function(jdata) {
            if(jdata.status = 200)
            {
                var city_list = "<option value=''>City</option>";
                $.each(jdata.message, function(key, value) {
                    city_list += "<option value='"+value+"'>"+value+"</option>";
                });
                $('#city_drop_down').html(city_list);
            }
        }
    });
    
    $.ajax({
        type:'POST',
        url:'ajax/save_frm_data.php',
        data: {type: 'op_drop_down', country: country},
        dataType:'json',
        beforeSend :function() {
//            jQuery('#txt_city').find("option:eq(0)").html("Please wait..");
        },
        success:function(jdata) {
            if(jdata.status = 200)
            {
                var op_list = "<option value=''>Operator</option>";
                $.each(jdata.message, function(key, value) {
                    op_list += "<option value='"+value+"'>"+value+"</option>";
                });
                $('#op_drop_down').html(op_list);
            }
        }
    });
    
    $('#btn_chart').on('click',function(){
        var btn = $(this);
        var btn_val = $(this).html();
        var city = $("#city_drop_down").val();
        var os = $("#os_drop_down").val();
        var op = $("#op_drop_down").val();
        var trend = $("#trend_drop_down").val();
        var start_dt, end_dt;
        if(trend == 'hour') {
            start_dt = end_dt = $("#dayyearmonth").val();
        } else if(trend == 'day') {
            var ym = $("#yearmonth").val();
            start_dt = ym + '-01';
            end_dt = ym + '-31';
        }
        
        if(os.toUpperCase() == 'IOS') {
            $("#scatter_chart").css('display', 'none');
        } else {
            $("#scatter_chart").css('display', 'block');
        }
        
        $.ajax({
            type:'POST',
            url:'ajax/save_frm_data.php',
            data: {type: 'get_call_details', country: country, city: city, os: os, op: op, trend: trend, start_dt: start_dt, end_dt: end_dt},
            dataType:'json',
            beforeSend :function() {
                inProgress(btn);
            },
            success:function(res) {
                stopProgress(btn, btn_val);
                if(res.status == 200) {
                    if(city != '' && res.message['lat'] != '' & res.message['lng'] != '') {
                        var myLatLng = new google.maps.LatLng(res.message['lat'], res.message['lng']);
                        var bounds = new google.maps.LatLngBounds();
                        map.setCenter(myLatLng);
                        bounds.extend(myLatLng);
                        map.setCenter(bounds.getCenter());
                        map.fitBounds(bounds);
                        map.setZoom(12);
                    }
                    
                    $("#call_connect").html(res.message['call_connect']);
                    $("#call_drop_rate").html(res.message['call_drop_rate']);
                    $("#call_block_rate").html(res.message['call_block_rate']);                    
                    $("#mute_call_rate").html(res.message['mute_call_rate']);
                    $("#mcr_total_calls").html(res.message['total_calls']);
                    $("#mcr_mute_calls").html(res.message['mute_calls']);
                    $("#mcr_min_sec").html(res.message['min_mute_sec']);
                    $("#mcr_max_sec").html(res.message['max_mute_sec']);
                    $("#mcr_avg_sec").html(res.message['avg_mute_sec']);
                    $("#mute_duration_min").html(res.message['min_mute_duration']);
                    $("#mute_duration_max").html(res.message['max_mute_duration']);
                    $("#mute_duration_avg").html(res.message['avg_mute_duration']);
                    $("#mute_duration_calls").html(res.message['mute_calls']);
                    $("#mute_call_duration_calls").html(res.message['mute_samples']);
                    $("#mute_call_duration_min").html(res.message['min_mute_duration_cov']);
                    $("#mute_call_duration_max").html(res.message['max_mute_duration_cov']);
                    $("#mute_call_duration_avg").html(res.message['avg_mute_duration_cov']);
                    $("#call_connect_min").html(res.message['min_call_connect']);
                    $("#call_connect_max").html(res.message['max_call_connect']);
                    $("#call_connect_avg").html(res.message['avg_call_connect']);
                    $("#call_connect_calls").html(res.message['call_connect_samples']);
                    
                    clearMarkers();
                    if(res.message['drop_locations']) {
                        loadMarkers(res.message['drop_locations'], '#008fd2', 'drop');
                    }
                    if(res.message['block_locations']) {
                        loadMarkers(res.message['block_locations'], '#d80707', 'block');
                    }
                    if(res.message['mute_locations']) {
                        loadMarkers(res.message['mute_locations'], '#f9bb15', 'mute');
                    }
                    
                    var gdata = $.map(res.message['mute_calls_time_wise'], function(value, index) {
                        return [value];
                    });
                    loadMuteCallRate(gdata);
                    
                    var gdata1 = $.map(res.message['mute_duration_histogram'], function(value, index) {
                        return [value];
                    });
                    loadMuteDuration(gdata1);
                    
                    if(os.toUpperCase() != 'IOS') {
                        $("#scatter_chart").css('display', 'block');
                        var gdata2 = $.map(res.message['cov_qua_mute'], function(value, index) {
                            return [value];
                        });
                        loadCoverageQualityMute(gdata2);
                    }
                    
                    var gdata3 = $.map(res.message['call_connect_histogram'], function(value, index) {
                        return [value];
                    });
                    loadCallConnect(gdata3);
                }
            }
        });
    });
    
    $('#btn_map').on('click',function(){
        var btn = $(this);
        var btn_val = $(this).html();
        var city = $("#city_drop_down").val();
        var os = $("#os_drop_down").val();
        var op = $("#op_drop_down").val();
        var trend = $("#trend_drop_down").val();
        var start_dt, end_dt;
        if(trend == 'hour') {
            start_dt = end_dt = $("#dayyearmonth").val();
        } else if(trend == 'day') {
            var ym = $("#yearmonth").val();
            start_dt = ym + '-01';
            end_dt = ym + '-31';
        }
        
        if(os.toUpperCase() == 'IOS') {
//            initAutocomplete();
            alert('Network details for iOS devices are not available');
            return false;
        }
                
        $.ajax({
            type:'POST',
            url:'ajax/save_frm_data.php',
            data: {type: 'get_network_details', country: country, city: city, os: os, op: op, trend: trend, start_dt: start_dt, end_dt: end_dt},
            dataType:'json',
            beforeSend :function() {
                inProgress(btn);
            },
            success:function(res) {
                stopProgress(btn, btn_val);
                if(res.status == 200) {
                    if(city != '' && res.message['lat'] != '' & res.message['lng'] != '') {
                        var myLatLng = new google.maps.LatLng(res.message['lat'], res.message['lng']);
                        var bounds = new google.maps.LatLngBounds();
                        map.setCenter(myLatLng);
                        bounds.extend(myLatLng);
                        map.setCenter(bounds.getCenter());
                        map.fitBounds(bounds);
                        map.setZoom(12);
                    }
                                        
                    clearMarkers();
                    if(res.message['rsrp_locations']) {
                        var rsrp_range_colors = ['#ee2020', '#3f3fe3', '#f7f720', '#6fea6f', '#0cd00c'];
                        $.each(res.message['rsrp_locations'], function( index, value ) {
                            loadMarkersGroup(value, rsrp_range_colors[index], 'rsrp');
                        });
                    }
                    
                    if(res.message['rsrq_locations']) {
                        var rsrq_range_colors = ['#ee2020', '#3f3fe3', '#f7f720', '#6fea6f', '#0cd00c'];
                        $.each(res.message['rsrq_locations'], function( index, value ) {
                            loadMarkersGroup(value, rsrq_range_colors[index], 'rsrq');
                        });
                    }
                    
                    if(res.message['sinr_locations']) {
                        var sinr_range_colors = ['#ee2020', '#f7a002', '#3f3fe3', '#f7f720', '#6fea6f', '#0cd00c'];
                        $.each(res.message['sinr_locations'], function( index, value ) {
                            loadMarkersGroup(value, sinr_range_colors[index], 'sinr');
                        });
                    }
                    
//                    if(res.message['mute_locations']) {
//                        var mute_range_colors = ['#81B622', '#FAD02C', '#0476D0', '#FF8300', '#F83839'];
//                        $.each(res.message['mute_locations'], function( index, value ) {
//                            loadMarkersGroup(value, mute_range_colors[index], 'mute');
//                        });
//                    }

                    if(res.message['mute_locations']) {
                        loadMarkersGroup(res.message['mute_locations'], '#eb43f0', 'mute');
                    }
                    
                    for (var i = 0; i < legend_types.length; i++) {
                        if(res.message[legend_types[i] + '_locations_count']) {
                            $.each(res.message[legend_types[i] + '_locations_count'], function( index, value ) {
                                $("#" + legend_types[i] + "_count_" + (index+1)).html(value);
                            });
                        }

                        if(res.message[legend_types[i] + '_locations_percentage']) {
                            $.each(res.message[legend_types[i] + '_locations_percentage'], function( index, value ) {
                                $("#" + legend_types[i] + "_percentage_" + (index+1)).html(value);
                            });
                        }
                    }
                    
                    toggleMarkersGroup();
                }
            }
        });
    });

    $('#btn_export').on('click',function(){
        var btn = $(this);
        var btn_val = $(this).html();
        var city = $("#city_drop_down").val();
        var os = $("#os_drop_down").val();
        var op = $("#op_drop_down").val();
        var trend = $("#trend_drop_down").val();
        var start_dt, end_dt;
        if(trend == 'hour') {
            start_dt = end_dt = $("#dayyearmonth").val();
        } else if(trend == 'day') {
            var ym = $("#yearmonth").val();
            start_dt = ym + '-01';
            end_dt = ym + '-31';
        }
        
        $.ajax({
            type:'POST',
            url:'ajax/save_frm_data.php',
            data: {type: 'export_csv_data', country: country, city: city, os: os, op: op, trend: trend, start_dt: start_dt, end_dt: end_dt},
            dataType:'text',
            beforeSend :function() {
                inProgress(btn);
            },
            success:function(data) {
                stopProgress(btn, btn_val);
                if(data) {
                    var encodedUri = 'data:application/csv;charset=utf-8,' + encodeURIComponent(data);
                    var link = document.createElement("a");
                    link.setAttribute("href", encodedUri);
                    link.setAttribute("download", "call_analyser_dump.csv");
                    link.innerHTML= "Download Call Analyser Data";
                    document.body.appendChild(link);
                    link.click();
                } else {
                    alert("No data found");
                }
            }
        });
    });
    
    $(document).on('click', '#call_drop_event, #drop',function(){        
        var checkBoxes = $("#drop");
        (checkBoxes.prop("checked")==true)?checkBoxes.prop("checked", false):checkBoxes.prop("checked", true);
        toggleMarkers('drop');
    });
    
    $(document).on('click', '#call_block_event, #block',function(){
        var checkBoxes = $("#block");
        (checkBoxes.prop("checked")==true)?checkBoxes.prop("checked", false):checkBoxes.prop("checked", true);
        toggleMarkers('block');
    });
    
    $(document).on('click', '#call_mute_event, #mute',function(){
        var checkBoxes = $("#mute");
        (checkBoxes.prop("checked")==true)?checkBoxes.prop("checked", false):checkBoxes.prop("checked", true);
        toggleMarkers('mute');
    });
});

function inProgress(elem) {
    $(elem).html("Please wait..");
//    $(elem).disabled = true;
    $(elem).attr("disabled", "disabled");
}

function stopProgress(elem, display_value) {
    $(elem).html(display_value);
//    $(elem).disabled = false;
    $(elem).removeAttr("disabled");
}

function toggleMarkers(type) {
    if (document.getElementById(type).checked == false) { // hide the marker
        for (var i = 0; i < markers.length; i++) {
            if (markers[i].call_type == type) {
                markers[i].setMap(null);
            }
        }
    } else { // show the marker again
        for (var i = 0; i < markers.length; i++) {
            if (markers[i].call_type == type) {
                markers[i].setMap(map);
            }
        }
    }
}

function loadMarkers(locations, markerColor, type) {    
    $.each(locations, function( index, value ) {
        marker = new google.maps.Marker({
            position: new google.maps.LatLng(value['lat'],value['lon']),
            map: map,
            call_type: type,
//            title: 'Hello',
            icon: {
                path: google.maps.SymbolPath.CIRCLE,
                scale: 5,
                fillColor: markerColor,
                fillOpacity: 1,
                strokeWeight: 0
            },
        });
        
        new google.maps.event.addListener(marker, 'mouseover', function() {
            $('#head_back_color').css('background', markerColor);
            $('#call_type').html(type.toUpperCase());
            $('#date_time').html(value['ts']);
            $('#sinr').html(value['sinr']);
            $('#rsrp').html(value['rsrp']);
            $('#cid').html(value['cell_id']);
            $('#compare1').css("display","block");
//            this.setAnimation(google.maps.Animation.BOUNCE);
        });
        
        new google.maps.event.addListener(marker, 'mouseout', function() {
            $('#call_type').html("-");
            $('#date_time').html("-");
            $('#sinr').html("-");
            $('#rsrp').html("-");
            $('#cid').html("-");
            $('#compare1').css("display","none");
            this.setAnimation(null);	
        });
        
        marker.addListener('click', function() {
            map.setZoom(16);
            map.setCenter(marker.getPosition());
        });
        markers.push(marker);
    });    
}

function clearMarkers() {
    for (var i = 0; i < markers.length; i++) {
        markers[i].setMap(null);
    }
    markers = [];
}

function loadMarkersGroup(locations, markerColor, type) {    
    $.each(locations, function( index, value ) {
        marker = new google.maps.Marker({
            position: new google.maps.LatLng(value[0],value[1]),
            map: map,
            type: type,
            title: type.toUpperCase() + ': ' + value[2],
            icon: {
                path: google.maps.SymbolPath.CIRCLE,
                scale: 5,
                fillColor: markerColor,
                fillOpacity: 1,
                strokeWeight: 0
            },
        });
                
        marker.addListener('click', function() {
            map.setZoom(16);
            map.setCenter(marker.getPosition());
        });
        markers.push(marker);
    });    
}
    
function showHideLegends() {
    $.each($("input:checkbox[name='rf_list']"), function() {
        $("#legend_"+$(this).val()).css("display", "none");
    });
    $("#legend_"+$("input:checkbox[name='mute_call']").val()).css("display", "none");

    if ($("input:checkbox[name='rf_list']:checked").val()) {
        $("#legend_"+$("input:checkbox[name='rf_list']:checked").val()).css("display", "block");
        $("#legend_"+$("input:checkbox[name='rf_list']:checked").val()).css("right", "0px");
    }
    if ($("input:checkbox[name='mute_call']").is(":checked")) {
        $("#legend_"+$("input:checkbox[name='mute_call']:checked").val()).css("display", "block");
        $("#legend_"+$("input:checkbox[name='mute_call']:checked").val()).css("right", "0px");
    }
}

function toggleMarkersGroup() {
    for (var i = 0; i < markers.length; i++) {
        if ($("input:checkbox[name='rf_list']:checked").val() == markers[i].type) {
            markers[i].setMap(map);
        } else if ($("input:checkbox[name='mute_call']:checked").val() == markers[i].type) {
            markers[i].setMap(map);
        } else {
            markers[i].setMap(null);
        }
    }
    
    showHideLegends();
}

function loadMuteCallRate(gdata) {
    gdata = gdata.map(function(elem) {
            return parseFloat(elem);
        });
        
    var trend = $("#trend_drop_down").val();
    var postfix = '';
    var x_axis_title = 'Days';
    if(trend == 'hour') {
        postfix = 'hr';
        x_axis_title = 'Hours';
    }
    
    Highcharts.chart('mute_call_rate_chart', {
        title: {
            text: ''
        },
        subtitle: {
            text: ''
        },
        exporting: { enabled: false },
        xAxis: {
            min: 1,
//            max: 24,
            tickInterval: 1,
            labels: {
                formatter: function() {
                    return this.axis.defaultLabelFormatter.call({
                        axis: this.axis,
                        value: this.value
                    }) + postfix;
                }
            },
            title: {
                text: x_axis_title
            }
        },
        yAxis: {
            visible: true,
            min: 0,
//            max: 100,
//            tickInterval: 10,
            lineWidth: 1,
            gridLineWidth: 0,
            title: {
                text: 'Mute Call Rate (%)'
            },
            labels: {
                formatter: function() {
                    return this.axis.defaultLabelFormatter.call({
                        axis: this.axis,
                        value: this.value
                    }) + "%";
                }
            },
        },
        plotOptions: {
            series: {
                label: {
                    connectorAllowed: false
                }
            }
        },
        tooltip: {
            formatter: function(){
                return this.x + '<br/><span style="color:' + this.color + '">\u25CF</span> ' + this.series.name + ': <b>' + this.y + '</b> %';
            }
        },
        series: [{
            name: 'Mute Call Rate',
//            data: [15, 10, 22, 18, 25, 12, 20, 17],
            data: gdata,
            showInLegend: false,
        }],

        responsive: {
            rules: [{
                condition: {
                    maxWidth: 500
                }
            }]
        }

    });
    $(".highcharts-credits").css("display","none");
}

function loadMuteDuration(gdata) {
    gdata = gdata.map(function(elem) {
            return parseFloat(elem);
        });
        
    Highcharts.chart('mute_duration_chart', {
        chart: {
            type: 'column',
        },
        title: {
            text: ''
        },
        subtitle: {
            text: ''
        },
        exporting: { enabled: false },
        xAxis: {
            categories: [
                '(0-2)',
                '(2-4)',
                '(4-6)',
                '(6-8)',
                '(8-10)',
                '(10-12)',
                '(12-14)',
                '(14-16)',
                '(>16)'
            ],
            title: {
                text: 'Total Mute Duration/Call'
            }
        },
        yAxis: {
            visible: true,
            min: 0,
//                    max: 100,
//            tickInterval: 2,
            lineWidth: 1,
            gridLineWidth: 0,
            title: {
                text: 'No of Mute Calls'
            },
        },
        plotOptions: {
            column: {
                borderWidth: 0,
                pointWidth: 14,
                color: '#f03a55',
                dataLabels: {
                    enabled: false,
                    crop: false,
                    overflow: 'none'
                }
            }
        },
        series: [{
            name: 'No. of Mute Calls',
//            data: [5, 10, 3, 2, 4, 7, 9, 6, 8],
            data: gdata,
            showInLegend: false,
        }],

        responsive: {
            rules: [{
                condition: {
                    maxWidth: 500
                }
            }]
        }

    });
    $(".highcharts-credits").css("display","none");
}

function loadCoverageQualityMute(gdata) {
    gdata = gdata.map(function(elem) {
            return elem.map(function(elem2) {
                res = elem2.split(",");
                return [parseFloat(res[0]),parseFloat(res[1])];
            });
        });
        
    Highcharts.chart('cov_qua_mute_chart', {
        chart: {
            type: 'scatter'
        },
        title: {
            text: ''
        },
        xAxis: {
            min: -140,
            max: -50,
            tickInterval: 5,
            gridLineWidth: 1,
            gridLineColor: '#f8f8f8',
            tickWidth: 0,
            title: {
                text: 'RSRP'
            },
            offset: -155
        },
        yAxis: {
            min: -15,
            max: 30,
            tickInterval: 5,
            lineWidth: 1,
            gridLineWidth: 1,
            gridLineColor: '#f8f8f8',
            tickWidth: 0,
            title: {
                text: 'Sinr'
            },
            offset: -395
        },
        legend: {
            enabled: true,
            title: {
                text: 'Mute Call Duration (sec)'
            },
            layout: 'vertical',
            align: 'right',
            verticalAlign: 'top',
            labelFormatter: function () {
                return this.name;
            }
        },
        plotOptions: {
            scatter: {
                marker: {
                    radius: 4,
                    symbol: 'circle'
                },
            }
        },
        tooltip: {
            formatter: function(){
                return '<br/><span style="color:' + this.color + '">\u25CF</span> ' + this.series.name + '<br>RSRP: <b>' + this.x + '</b> dBm <br>SINR: <b>' + this.y + '</b> dB';
            }
        },
        series: [{
            name: '0-2',
            color: '#81B622',
//            data: [[-104, -6.0], [-103, 1.8]]
            data: gdata[0]

        }, {
            name: '2-5',
            color: '#FAD02C',
//            data: [[-103, -1.4], [-87, 2.6]]
            data: gdata[1]
        }, {
            name: '5-10',
            color: '#0476D0',
//            data: [[-103, -1.4], [-87, 2.6]]
            data: gdata[2]
        }, {
            name: '10-15',
            color: '#FF8300',
//            data: [[-103, -1.4], [-87, 2.6]]
            data: gdata[3]
        }, {
            name: '>15',
            color: '#F83839',
//            data: [[-103, -1.4], [-87, 2.6]]
            data: gdata[4]
        }]
    });
    $(".highcharts-credits").css("display","none");
}

function loadCallConnect(gdata) {
    gdata = gdata.map(function(elem) {
            return parseFloat(elem);
        });
        
    Highcharts.chart('call_connect_chart', {
        chart: {
            type: 'column',
        },
        title: {
            text: ''
        },
        subtitle: {
            text: ''
        },
        exporting: { enabled: false },
        xAxis: {
            categories: [
                '(0-2)',
                '(2-4)',
                '(4-6)',
                '(6-8)',
                '(8-10)',
                '(10-12)',
                '(12-14)',
                '(14-16)',
                '(>16)'
            ],
            title: {
                text: 'Call connect time (sec)'
            }
        },
        yAxis: {
            visible: true,
            min: 0,
//                    max: 100,
//            tickInterval: 10,
            lineWidth: 1,
            gridLineWidth: 0,
            title: {
                text: '% of samples'
            },
            labels: {
                formatter: function() {
                    return this.axis.defaultLabelFormatter.call({
                        axis: this.axis,
                        value: this.value
                    }) + "%";
                }
            },
        },
        plotOptions: {
            column: {
                borderWidth: 0,
                pointWidth: 14,
                color: '#fbb91c',
                dataLabels: {
                    enabled: false,
                    crop: false,
                    overflow: 'none'
                }
            }
        },
        tooltip: {
            formatter: function(){
                return this.x + '<br/><span style="color:' + this.color + '">\u25CF</span> ' + this.series.name + ': <b>' + this.y + '</b> %';
            }
        },
        series: [{
            name: '% of samples',
//            data: [15, 10, 22, 18, 25, 12, 20, 17],
            data: gdata,
            showInLegend: false,
        }],

        responsive: {
            rules: [{
                condition: {
                    maxWidth: 500
                }
            }]
        }

    });
    $(".highcharts-credits").css("display","none");
}
